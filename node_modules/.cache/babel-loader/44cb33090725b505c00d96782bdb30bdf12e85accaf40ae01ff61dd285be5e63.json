{"ast":null,"code":"var _jsxFileName = \"/Users/peterxu/Documents/USC/\\u5B66\\u4E60/Senior Fall/ITP404/final-project/src/Rating.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rating(props) {\n  const stars = [];\n  for (let i = 1; i <= 5; i++) {\n    // add attribute starNumber\n    stars.push( /*#__PURE__*/_jsxDEV(Star, {\n      starNumber: i,\n      rating: props.rating,\n      // children refers to whatever is in between opening and closing tags of the component\n      renderStar: props.children\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: stars\n  }, void 0, false);\n}\n_c = Rating;\nfunction Star(props) {\n  // if starNumber <= given rating, then return filledColor, return emptyColor otherwise\n  const isFilled = props.starNumber <= props.rating;\n  // starNumber is assigned in line 11\n  return props.renderStar(isFilled, props.starNumber);\n}\n_c2 = Star;\nvar _c, _c2;\n$RefreshReg$(_c, \"Rating\");\n$RefreshReg$(_c2, \"Star\");","map":{"version":3,"names":["FontAwesomeIcon","faStar","Rating","props","stars","i","push","rating","children","Star","isFilled","starNumber","renderStar"],"sources":["/Users/peterxu/Documents/USC/学习/Senior Fall/ITP404/final-project/src/Rating.js"],"sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Rating(props) {\n  const stars = [];\n\n  for (let i = 1; i <= 5; i++) {\n    // add attribute starNumber\n    stars.push(\n      <Star\n        starNumber={i}\n        rating={props.rating}\n        key={i}\n        // children refers to whatever is in between opening and closing tags of the component\n        renderStar={props.children}\n      />\n    );\n  }\n\n  return <>{stars}</>;\n}\n\nfunction Star(props) {\n  // if starNumber <= given rating, then return filledColor, return emptyColor otherwise\n  const isFilled = props.starNumber <= props.rating;\n  // starNumber is assigned in line 11\n  return props.renderStar(isFilled, props.starNumber);\n}\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAC;AAAA;AAE3D,eAAe,SAASC,MAAM,CAACC,KAAK,EAAE;EACpC,MAAMC,KAAK,GAAG,EAAE;EAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3B;IACAD,KAAK,CAACE,IAAI,eACR,QAAC,IAAI;MACH,UAAU,EAAED,CAAE;MACd,MAAM,EAAEF,KAAK,CAACI,MAAO;MAErB;MACA,UAAU,EAAEJ,KAAK,CAACK;IAAS,GAFtBH,CAAC;MAAA;MAAA;MAAA;IAAA,QAGN,CACH;EACH;EAEA,oBAAO;IAAA,UAAGD;EAAK,iBAAI;AACrB;AAAC,KAjBuBF,MAAM;AAmB9B,SAASO,IAAI,CAACN,KAAK,EAAE;EACnB;EACA,MAAMO,QAAQ,GAAGP,KAAK,CAACQ,UAAU,IAAIR,KAAK,CAACI,MAAM;EACjD;EACA,OAAOJ,KAAK,CAACS,UAAU,CAACF,QAAQ,EAAEP,KAAK,CAACQ,UAAU,CAAC;AACrD;AAAC,MALQF,IAAI;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}