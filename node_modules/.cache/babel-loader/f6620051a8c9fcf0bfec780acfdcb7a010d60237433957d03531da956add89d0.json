{"ast":null,"code":"var _jsxFileName = \"/Users/peterxu/Documents/USC/\\u5B66\\u4E60/Senior Fall/ITP404/final-project/src/Checkbox.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkbox(props) {\n  _s();\n  const parkingLots = props.parkingLots;\n  const handleChange = props.handleChange;\n  const isIndeterminate = props.isIndeterminate;\n  const isSelectedAll = props.isSelectedAll;\n  const checkboxRef = useRef();\n  useEffect(() => {\n    checkboxRef.current.indeterminate = isIndeterminate;\n  }, [isIndeterminate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      \"data-testid\": \"select-test\",\n      children: \"Select Comments to Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        name: \"selectAll\",\n        ref: checkboxRef,\n        checked: isSelectedAll,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label ms-2\",\n        children: \"Select All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), parkingLots.map(parkingLot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        name: parkingLot.name,\n        checked: (parkingLot === null || parkingLot === void 0 ? void 0 : parkingLot.isChecked) || false,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label ms-2\",\n        children: parkingLot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, parkingLot.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Checkbox, \"s2fw4JFsYZ/+C1WMGT54pjQwCLM=\");\n_c = Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["useEffect","useRef","Checkbox","props","parkingLots","handleChange","isIndeterminate","isSelectedAll","checkboxRef","current","indeterminate","map","parkingLot","name","isChecked"],"sources":["/Users/peterxu/Documents/USC/学习/Senior Fall/ITP404/final-project/src/Checkbox.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport default function Checkbox(props) {\n  const parkingLots = props.parkingLots;\n  const handleChange = props.handleChange;\n  const isIndeterminate = props.isIndeterminate;\n  const isSelectedAll = props.isSelectedAll;\n\n  const checkboxRef = useRef();\n\n  useEffect(() => {\n    checkboxRef.current.indeterminate = isIndeterminate;\n  }, [isIndeterminate]);\n\n  return (\n    <div className=\"container my-4\">\n      {/* <form className=\"form\"> */}\n      <h3 data-testid=\"select-test\">Select Comments to Delete</h3>\n      <div className=\"form-check\">\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          name=\"selectAll\"\n          ref={checkboxRef}\n          checked={isSelectedAll}\n          onChange={handleChange}\n        />\n        <label className=\"form-check-label ms-2\">Select All</label>\n      </div>\n      {parkingLots.map((parkingLot) => (\n        <div className=\"form-check\" key={parkingLot.name}>\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            name={parkingLot.name}\n            checked={parkingLot?.isChecked || false}\n            onChange={handleChange}\n          />\n          <label className=\"form-check-label ms-2\">{parkingLot.name}</label>\n        </div>\n      ))}\n      {/* </form> */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAE1C,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACtC,MAAMC,WAAW,GAAGD,KAAK,CAACC,WAAW;EACrC,MAAMC,YAAY,GAAGF,KAAK,CAACE,YAAY;EACvC,MAAMC,eAAe,GAAGH,KAAK,CAACG,eAAe;EAC7C,MAAMC,aAAa,GAAGJ,KAAK,CAACI,aAAa;EAEzC,MAAMC,WAAW,GAAGP,MAAM,EAAE;EAE5BD,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACC,OAAO,CAACC,aAAa,GAAGJ,eAAe;EACrD,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAE7B;MAAI,eAAY,aAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,eAC5D;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QACE,IAAI,EAAC,UAAU;QACf,SAAS,EAAC,kBAAkB;QAC5B,IAAI,EAAC,WAAW;QAChB,GAAG,EAAEE,WAAY;QACjB,OAAO,EAAED,aAAc;QACvB,QAAQ,EAAEF;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAO,SAAS,EAAC,uBAAuB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACvD,EACLD,WAAW,CAACO,GAAG,CAAEC,UAAU,iBAC1B;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QACE,IAAI,EAAC,UAAU;QACf,SAAS,EAAC,kBAAkB;QAC5B,IAAI,EAAEA,UAAU,CAACC,IAAK;QACtB,OAAO,EAAE,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,SAAS,KAAI,KAAM;QACxC,QAAQ,EAAET;MAAa;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAO,SAAS,EAAC,uBAAuB;QAAA,UAAEO,UAAU,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,GARnCD,UAAU,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QAUjD,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEE;AAEV;AAAC,GA1CuBX,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}